# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4

      with:
        dotnet-version: 8.x
        source-url: https://nuget.pkg.github.com/AndrewMcLachlan/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.CROSS_REPO_PACKAGE_TOKEN}}
    - name: Set version number
      id: set-version-number
      uses: andrewmclachlan/actions/set-version-number@v2
      with:
        project: 'src/Asm.AmCom.Web'
        versionPropertyName: 'Version'
    - name: Restore dependencies
      run: dotnet restore Asm.AmCom.sln
    - name: Publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.CROSS_REPO_PACKAGE_TOKEN }}
      run: dotnet publish src/Asm.AmCom.Web/Asm.AmCom.Web.csproj --output ${{ github.workspace }}/publish --configuration Release --p:Version=${{ steps.set-version-number.outputs.version }} --p:FileVersion=${{ steps.set-version-number.outputs.version }} --no-restore
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: publish
        path: ${{ github.workspace }}/publish

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/main'
    uses: AndrewMcLachlan/AmCom/.github/workflows/deploy-template.yml@main
    with:
      environment: 'Staging'
      artifactName: publish
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_WEBAPP_NAME: ${{ secrets.WEB_APP_NAME }}
  deploy-production:
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    uses: AndrewMcLachlan/AmCom/.github/workflows/deploy-template.yml@main
    with:
      environment: 'Production'
      artifactName: publish
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_WEBAPP_NAME: ${{ secrets.WEB_APP_NAME }}

    # - name: Install Octopus CLI
    #   uses: OctopusDeploy/install-octopus-cli-action@v3
    #   with:
    #     version: latest
    # - name: Create artifacts folder
    #   run: mkdir ${{ github.workspace }}/artifacts
    # - name: Package
    #   env:
    #     OCTOPUS_URL: ${{ vars.OCTOPUSURL }}
    #     OCTOPUS_API_KEY: ${{ secrets.OCTOPUSAPIKEY }}
    #     OCTOPUS_SPACE: Default
    #   run: octopus package zip create --id Asm.AmCom.Web --version ${{ steps.set-version-number.outputs.version }} --base-path ${{ github.workspace }}/publish --out-folder ${{ github.workspace }}/artifacts
    # - name: Push packages
    #   if: (github.event_name != 'pull_request')
    #   uses: OctopusDeploy/push-package-action@v3
    #   with:
    #     api_key: ${{ secrets.OCTOPUSAPIKEY }}
    #     server: ${{ vars.OCTOPUSURL }}
    #     packages: " ${{ github.workspace }}/artifacts/Asm.AmCom.Web.${{ steps.set-version-number.outputs.version }}.zip"
    #     space: 'Default'
    # - name: Create release
    #   if: (github.event_name != 'pull_request')
    #   uses: OctopusDeploy/create-release-action@v3
    #   with:
    #     api_key: ${{ secrets.OCTOPUSAPIKEY }}
    #     server: ${{ vars.OCTOPUSURL }}
    #     release_number: ${{ steps.set-version-number.outputs.version }}
    #     package_version: ${{ steps.set-version-number.outputs.version }}
    #     space: 'Default'
    #     project: "AndrewMcLachlan.com"
    #     progress: false
